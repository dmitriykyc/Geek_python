#  Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
#
#  Проверить работу исключения на реальном примере.
#  Необходимо запрашивать у пользователя данные и заполнять список.
#  Класс-исключение должен контролировать типы данных элементов списка.

# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
# скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
# # Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.

# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить
# его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
# текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться

class MyError(Exception):
    def __init__(self, numb):
        self.numb = numb

class Num:
    def comoarison(self, spis):
        a = [i for i in spis if i.isdigit()]
        return a == spis

num = Num()
spis = []
while True:
    num = input('Введите что-то, или введите stop для завершения: ')
    if num not in ['stop', 'Stop']:
        if not num.isdigit():
            print('Вы ввели не число: ')
        else:
            spis.append(num)
    else:
        print(f'Введенный Вами список: {spis}')
        break
try:
    if an.comoarison(spis) == False:
        raise MyError('список состоит не из цифр')
except MyError as er:
    print(er)
else:
    print(f'Все отлично, список {spis} состоит только из цифр')