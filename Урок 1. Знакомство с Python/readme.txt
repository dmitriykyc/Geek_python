# 1. Поработайте с переменными, создайте несколько,
# выведите на экран, запросите у пользователя несколько чисел и строк и
# сохраните в переменные, выведите на экран.

number = 12345
text_hello = 'Привет Глеб! Приятно познакомиться!)'
ball = input('Глеб, на сколько баллов моё дз?')
result = f'Я значит говорю "{text_hello}", спрашиваю на сколько я сделал ДЗ? А глеб мне отвечает {ball}'


# 2. Пользователь вводит время в секундах.
# Переведите время в часы, минуты и секунды и выведите в
# формате чч:мм:сс. Используйте форматирование строк.
time = int(input('Введите число в секундах, я переведу в часы:'))

sec = str(time % 60).zfill(2)
min = str(time // 60 % 60).zfill(2)
hours = str(time // 60 // 60).zfill(2)

print(f'{time} секунд переведем в часы и минуты, получается {hours}:{min}:{sec}')


# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
number3 = input('Введите число:')
result3_1 = int(number3 ) + int(number3+number3) + int(number3+number3+number3)
print(f'Результат сложения: {number3} + {number3+number3} + {number3+number3+number3} = {result3_1}')


# 4. Пользователь вводит целое положительное число.
# Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.

number = int(input('Введите число: '))
number_text = number
number2 = number % 10
max_number = 0

while number:
    if number2 > max_number:
        max_number = number2
    number //= 10
    number2 = number % 10

print(f'Мы взяли число {number_text} и нашли в нем самую большую цифру, это: {max_number}')

# 5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма
# (прибыль — выручка больше издержек, или убыток — издержки больше выручки).
# Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки
# (соотношение прибыли к выручке). Далее запросите численность сотрудников фирмы
# и определите прибыль фирмы в расчете на одного сотрудника.

vir = int(input('Введите выручку: '))
izd = int(input('Введите издержки: '))
prib = vir - izd

if vir > izd:
    print(f'Прибыль составила: {prib:.2f} рублей')
    sotr = int(input('Введите число сотрудников и я посчитаю прибыль на сотрудника: '))
    prib_sotr =  prib/sotr
    print(f'Прибыль на каждого сотрудника составила: {prib_sotr:.2f} рублей')
elif vir < izd:
    print(f'Убыток составил: {prib:.2f} рублей')
else:
    print('Отработали в 0')


# 6. Спортсмен занимается ежедневными пробежками.
# В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

# Не совсем сначала понял задание, вот такой вариант, чтобы пробежать за один забег b км увеличивая на 10% предыдущий.
a1 = int(input('Введите количество км в первый день: '))
b1 = int(input('Введите сколько хотите пробежать: '))
day1 = 0 # Счетчик дней

while a1 < b1:
    a1 *= 1.1
    day1 += 1

print(f'Если бежать на 10% больше чем вчера, вы достигните результата в {a1:.2f} за один забег через {day1} дней.')

# И второй вариант с достижением общего киллометража от всех забегов.

a2 = int(input('Введите количество км: '))
b2 = int(input('Сколько нужно пробежать? '))
day2 = 1 # Считаем дни, 1 - т.к. в переменную km мы уже внесли результат первого дня
km2 = a

while km2 < b2:
    a2 = a2 + (a2 * 0.01)
    km2 += a2
    day2 += 1

print(f'Чтобы пробежать {b2} км. Вам потребуется {day2} дня, точный киллометраж составит: {km2:.2f} км.')
